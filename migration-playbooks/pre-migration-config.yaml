# Copyright (c) 2020 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.1 (the "License"). You may obtain a copy of the
# License at
#
#                https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

---
- name: Deploy Pre-Migraiton Configuration (ACI)
  hosts: aci
  gather_facts: False
  tasks:
    - name: Import Migration Data
      include_vars:
        file: migration_data.yaml
        name: migration_data
    # - name: Create tenant
    #   aci_tenant:
    #     host: '{{ inventory_hostname }}'
    #     username: '{{ apic_username }}'
    #     password: '{{ apic_password }}' 
    #     validate_certs: false
    #     tenant: "{{ item.name }}"
    #     state: present
    #   delegate_to: localhost
    #   with_items: "{{ migration_data.aci.tenant }}"
    # - name: Create VRFs
    #   aci_vrf:
    #     host: '{{ inventory_hostname }}'
    #     username: '{{ apic_username }}'
    #     password: '{{ apic_password }}' 
    #     validate_certs: false
    #     tenant: "{{ item.tenant }}"
    #     vrf: "{{ item.name }}"
    #     state: present
    #   delegate_to: localhost
    #   with_items: "{{ migration_data.aci.vrf }}"
    - name: Create BDs in L2 Mode
      aci_bd:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        vrf: "{{ item.l2_mode_settings.vrf }}"
        bd: "{{ item.name }}"
        mac_address: "{{ item.l2_mode_settings.mac }}"
        enable_routing: "{{ item.l2_mode_settings.enable_routing }}"
        arp_flooding: "{{ item.l2_mode_settings.arp_flooding }}"
        l2_unknown_unicast: "{{ item.l2_mode_settings.l2_unknown_unicast }}"
        l3_unknown_multicast: "{{ item.l2_mode_settings.l3_unknown_multicast }}"
        multi_dest: "{{ item.l2_mode_settings.multi_dest }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.bd }}"
    - name: Create Application Profiles
      aci_ap:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        ap: "{{ item.name }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.app_profile }}"
    - name: Create EPGs
      aci_epg:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        ap: "{{ item.app_profile }}"
        epg: "{{ item.name }}"
        bd: "{{ item.bd }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.epg }}"
    - name: Associate EPGs with VMM Domains
      aci_epg_to_domain:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        ap: "{{ item.app_profile }}"
        epg: "{{ item.epg }}"
        domain: "{{ item.name }}"
        domain_type: "{{ item.type }}"
        vm_provider: "{{ item.vmm_provider }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.epg_vmm_domain }}"
    - name: Associate EPGs with Phys Domains
      aci_epg_to_domain:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        ap: "{{ item.app_profile }}"
        epg: "{{ item.epg }}"
        domain: "{{ item.name }}"
        domain_type: "{{ item.type }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.epg_phys_domain }}"
    - name: Create static binding towards existing network
      aci_static_binding_to_epg:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        ap: "{{ item.app_profile }}"
        epg: "{{ item.epg }}"
        encap_id: "{{ item.encap_vlan_id }}"
        interface: "{{ item.name }}"
        interface_mode: "{{ item.mode }}"
        interface_type: "{{ item.type }}"
        pod_id: "{{ item.pod_id }}"
        leafs: "{{ item.leafs }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.epg_static_binding }}"