# Copyright (c) 2020 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.1 (the "License"). You may obtain a copy of the
# License at
#
#                https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

---
- name: Prepare Layer-3 Migration (ACI)
  hosts: aci
  gather_facts: False
  tasks:
    - name: Import Migration Data
      include_vars:
        file: migration_data.yaml
        name: migration_data
    - name: Associate BDs to L3out(s)
      aci_bd_to_l3out:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}'
        validate_certs: false
        tenant: "{{ item.tenant }}"
        bd: "{{ item.name }}"
        l3out: "{{ item.l3out }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.bd_l3out }}"
    - name: Create Contracts
      aci_contract:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        contract: "{{ item.name }}"
        scope: "{{ item.scope }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.contract }}"
    - name: Create Contract Subject (wordpress_db/db)
      aci_contract_subject:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        contract: "{{ item.contract }}"
        subject: "{{ item.name }}"
        reverse_filter: "{{ item.reverse_filter }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.contract_subject }}"
    - name: Create Contract Filter
      aci_filter:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        filter: "{{ item.name }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.contract_filter }}"
    - name: Create Contract Filter Entry
      aci_filter_entry:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        filter: "{{ item.filter }}"
        entry: "{{ item.name }}"
        ether_type: "{{ item.ether_type }}"
        ip_protocol: "{{ item.ip_protocol }}"
        dst_port: "{{ item.dst_port }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.contract_filter_entry }}"
    - name: Associate Contract Filter to Subject
      aci_contract_subject_to_filter:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        contract: "{{ item.name }}"
        subject: "{{ item.subject }}"
        filter: "{{ item.filter }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.contract_filter_association }}"
    - name: Associate Contracts to EPGs
      aci_epg_to_contract:  
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        ap: "{{ item.app_profile }}"
        epg: "{{ item.name }}"
        contract: "{{ item.contract }}"
        contract_type: "{{ item.contract_type }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.epg_contract }}"
    - name: Consume Contracts by External EPG
      aci_rest:  
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        path: /api/mo/uni/tn-{{ item.tenant }}/out-{{ item.l3out }}/instP-{{ item.name}}.json
        method: post
        content:
          fvRsCons:
            attributes:
              tnVzBrCPName: "{{ item.contract }}"
              status: "created,modified"
      delegate_to: localhost
      with_items: "{{ migration_data.aci.ext_epg_contract }}"

- name: Perform Layer-3 Migration (NXOS)
  hosts: nxos
  gather_facts: False
  tasks:
    - name: Import Migration Data
      include_vars:
        file: migration_data.yaml
        name: migration_data
    - name: Shutdown VLAN in existing Network
      nxos_config:
        lines:
          - shutdown
        parents: interface {{ item }}
        save_when: modified
      with_items: "{{ migration_data.legacy.l3_interface }}"

- name: Perform Layer-3 Migration (ACI)
  hosts: aci
  gather_facts: False
  tasks:
    - name: Import Migration Data
      include_vars:
        file: migration_data.yaml
        name: migration_data
    - name: Change BDs to L3 Mode
      aci_bd:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        vrf: "{{ item.l3_mode_settings.vrf }}"
        bd: "{{ item.name }}"
        mac_address: "{{ item.l3_mode_settings.mac }}"
        enable_routing: "{{ item.l3_mode_settings.enable_routing }}"
        arp_flooding: "{{ item.l3_mode_settings.arp_flooding }}"
        l2_unknown_unicast: "{{ item.l3_mode_settings.l2_unknown_unicast }}"
        l3_unknown_multicast: "{{ item.l3_mode_settings.l3_unknown_multicast }}"
        multi_dest: "{{ item.l3_mode_settings.multi_dest }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.bd }}"
    - name: Add subnet to BDs
      aci_bd_subnet:
        host: '{{ inventory_hostname }}'
        username: '{{ apic_username }}'
        password: '{{ apic_password }}' 
        validate_certs: false
        tenant: "{{ item.tenant }}"
        bd: "{{ item.bd }}"
        subnet_name: "{{ item.name }}"
        gateway: "{{ item.gateway }}"
        mask: "{{ item.mask }}"
        scope: "{{ item.scope }}"
        state: present
      delegate_to: localhost
      with_items: "{{ migration_data.aci.bd_subnet }}"
